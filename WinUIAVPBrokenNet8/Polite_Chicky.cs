//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.1.2-build.10+g76f4768637
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 2.4 -InputFile Polite Chicky.json
//       
//       Input file:
//           Polite Chicky.json (27948 bytes created 19:59+11:00 Dec 11 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   176 |
// |--------------------------+-------|
// | Expression animators     |    14 |
// | KeyFrame animators       |    14 |
// | Reference parameters     |    14 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     1 |
// | ShapeVisuals             |     1 |
// |--------------------------+-------|
// | ContainerShapes          |     4 |
// | CompositionSpriteShapes  |    18 |
// |--------------------------+-------|
// | Brushes                  |     7 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     - |
// ------------------------------------
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using Microsoft.UI.Xaml.Controls;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        BIRD
    // Frame rate:  60 fps
    // Frame count: 120
    // Duration:    2000.0 mS
    sealed class Polite_Chicky
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 2.000 seconds.
        internal const long c_durationTicks = 20000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            if (Polite_Chicky_AnimatedVisual.IsRuntimeCompatible())
            {
                var res = 
                    new Polite_Chicky_AnimatedVisual(
                        compositor
                        );
                    return res;
            }

            return null;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 120d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 120d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class Polite_Chicky_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 20000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            CompositionColorBrush _colorBrush_AlmostBlack_FF131331;
            CompositionColorBrush _colorBrush_AlmostDarkOliveGreen_FF4D2E1E;
            CompositionColorBrush _colorBrush_AlmostMediumTurquoise_FF37BEC5;
            CompositionColorBrush _colorBrush_White;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            CubicBezierEasingFunction _cubicBezierEasingFunction_6;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_0_to_0_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation_0;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: beak top  Offset:<22.02, 10.6970005>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.7190001F, -2.4059999F));
                    builder.AddLine(new Vector2(2.398F, -0.407999992F));
                    builder.AddCubicBezier(new Vector2(2.7190001F, -0.231000006F), new Vector2(2.7190001F, 0.231999993F), new Vector2(2.398F, 0.409000009F));
                    builder.AddLine(new Vector2(-2.7190001F, 2.4059999F));
                    builder.AddLine(new Vector2(-2.7190001F, -2.4059999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<16.212, 28.668>
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, -23.6679993F));
                    builder.AddCubicBezier(new Vector2(1.12100005F, -23.6679993F), new Vector2(2.2019999F, -23.507F), new Vector2(3.22300005F, -23.2089996F));
                    builder.AddCubicBezier(new Vector2(7.84499979F, -21.8579998F), new Vector2(11.2119999F, -17.6779995F), new Vector2(11.2119999F, -12.7290001F));
                    builder.AddCubicBezier(new Vector2(11.2119999F, -11.7390003F), new Vector2(11.1820002F, -5.46500015F), new Vector2(11.1459999F, 1.60300004F));
                    builder.AddCubicBezier(new Vector2(11.0839996F, 13.8070002F), new Vector2(1.17299998F, 23.6679993F), new Vector2(-11.0310001F, 23.6679993F));
                    builder.AddCubicBezier(new Vector2(-11.0310001F, 23.6679993F), new Vector2(-11.2119999F, -10.1960001F), new Vector2(-11.2119999F, -12.7290001F));
                    builder.AddCubicBezier(new Vector2(-11.2119999F, -17.5060005F), new Vector2(-8.07400036F, -21.5680008F), new Vector2(-3.69799995F, -23.059F));
                    builder.AddCubicBezier(new Vector2(-2.53999996F, -23.4540005F), new Vector2(-1.29499996F, -23.6679993F), new Vector2(0.00100000005F, -23.6679993F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: eye  Offset:<18.241, 13.426>
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.06599998F, 0F));
                    builder.AddCubicBezier(new Vector2(1.06599998F, 0.588999987F), new Vector2(0.588F, 1.06599998F), new Vector2(0F, 1.06599998F));
                    builder.AddCubicBezier(new Vector2(-0.588999987F, 1.06599998F), new Vector2(-1.06599998F, 0.588999987F), new Vector2(-1.06599998F, 0F));
                    builder.AddCubicBezier(new Vector2(-1.06599998F, -0.588999987F), new Vector2(-0.588999987F, -1.06599998F), new Vector2(0F, -1.06599998F));
                    builder.AddCubicBezier(new Vector2(0.588F, -1.06599998F), new Vector2(1.06599998F, -0.588999987F), new Vector2(1.06599998F, 0F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:9.87,9.87, Offset:<496.32498, 754.14>
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.4749999F, -8.14099979F));
                    builder.AddLine(new Vector2(-2.46499991F, 3.079F));
                    builder.AddLine(new Vector2(2.46499991F, 3.079F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:9.87,9.87, Offset:<496.32498, 754.14>
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-2.46499991F, -3.079F));
                    builder.AddLine(new Vector2(-2.46499991F, 3.079F));
                    builder.AddLine(new Vector2(2.46499991F, 3.079F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<22.28, 15.333>
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.94700003F, 10.3330002F));
                    builder.AddLine(new Vector2(2.13899994F, 10.3330002F));
                    builder.AddCubicBezier(new Vector2(-8.54100037F, 10.3330002F), new Vector2(-17.2810001F, 1.59500003F), new Vector2(-17.2810001F, -9.08600044F));
                    builder.AddCubicBezier(new Vector2(-17.2810001F, -9.77200031F), new Vector2(-16.7199993F, -10.3330002F), new Vector2(-16.0340004F, -10.3330002F));
                    builder.AddLine(new Vector2(6.94700003F, -10.3330002F));
                    builder.AddCubicBezier(new Vector2(12.6309996F, -10.3330002F), new Vector2(17.2810001F, -5.68400002F), new Vector2(17.2810001F, 0F));
                    builder.AddCubicBezier(new Vector2(17.2810001F, 5.68400002F), new Vector2(12.6309996F, 10.3330002F), new Vector2(6.94700003F, 10.3330002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 3 Scale:0.12,0.12, Offset:<32.354, 10.197>
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-59.8129997F, -42.4580002F));
                    builder.AddLine(new Vector2(-25.1030006F, -42.4580002F));
                    builder.AddCubicBezier(new Vector2(21.6009998F, -42.4580002F), new Vector2(59.8129997F, -4.24599981F), new Vector2(59.8129997F, 42.4580002F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(62.9589996F, -24.6879997F));
                    builder.AddCubicBezier(new Vector2(62.9589996F, -24.6879997F), new Vector2(-49.9129982F, 24.6879997F), new Vector2(-62.9589996F, -7.90199995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(60.8569984F, -33.2509995F));
                    builder.AddCubicBezier(new Vector2(60.8569984F, -33.2509995F), new Vector2(-42.8499985F, 33.2509995F), new Vector2(-60.8569984F, 3.1170001F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-32.7579994F, 21.1130009F));
                    builder.AddCubicBezier(new Vector2(-0.943000019F, 11.8290005F), new Vector2(32.7579994F, -2.52999997F), new Vector2(29.1049995F, -21.1130009F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 8 Offset:<98.067, 113.482>
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-92.5070038F, -21.1359997F));
                    builder.AddCubicBezier(new Vector2(-97.8180008F, -11.6260004F), new Vector2(-95.3860016F, 25.6800003F), new Vector2(-88.1940002F, 38.8959999F));
                    builder.AddCubicBezier(new Vector2(-78.9059982F, 55.9640007F), new Vector2(-62.4329987F, 58.2070007F), new Vector2(1.36000001F, 38.1310005F));
                    builder.AddCubicBezier(new Vector2(65.1529999F, 18.0540009F), new Vector2(72.2190018F, 25.0559998F), new Vector2(88.401001F, 5.11399984F));
                    builder.AddCubicBezier(new Vector2(97.8170013F, -6.49100018F), new Vector2(87.2789993F, -44.5470009F), new Vector2(68.8479996F, -51.3769989F));
                    builder.AddCubicBezier(new Vector2(50.4179993F, -58.2070007F), new Vector2(-82.4649963F, -39.1160011F), new Vector2(-92.5070038F, -21.1359997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 7 Offset:<90.666, 58.385>
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-69.689003F, 58.1339989F));
                    builder.AddCubicBezier(new Vector2(-69.689003F, 58.1339989F), new Vector2(-73.6220016F, 47.5110016F), new Vector2(-69.3600006F, 32.1100006F));
                    builder.AddCubicBezier(new Vector2(-65.098999F, 16.7089996F), new Vector2(-71.3430023F, -6.84800005F), new Vector2(-64.5849991F, -23.9540005F));
                    builder.AddCubicBezier(new Vector2(-58.5589981F, -39.2099991F), new Vector2(-47.9599991F, -56.8889999F), new Vector2(-28.6329994F, -57.4109993F));
                    builder.AddCubicBezier(new Vector2(-1.88600004F, -58.1339989F), new Vector2(8.76099968F, -52.8069992F), new Vector2(21.4570007F, -44.6529999F));
                    builder.AddCubicBezier(new Vector2(32.3129997F, -37.6790009F), new Vector2(65F, -5.62200022F), new Vector2(71.5619965F, 15.9949999F));
                    builder.AddCubicBezier(new Vector2(73.6220016F, 22.7779999F), new Vector2(71.3259964F, 34.6990013F), new Vector2(71.3259964F, 34.6990013F));
                    builder.AddLine(new Vector2(-69.689003F, 58.1339989F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 6 Offset:<88.697, 70.995>
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-66.1689987F, 11.3249998F));
                    builder.AddCubicBezier(new Vector2(-66.1689987F, 11.3249998F), new Vector2(16.7380009F, -11.3260002F), new Vector2(66.1689987F, -9.36100006F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 5 Offset:<27.717, 119.035>
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1.03400004F, -21.7399998F));
                    builder.AddCubicBezier(new Vector2(1.03400004F, -21.7399998F), new Vector2(-5.92700005F, 7.24300003F), new Vector2(5.92799997F, 21.7399998F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 4 Offset:<159.212, 93.184>
            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-6.98999977F, -16.7959995F));
                    builder.AddCubicBezier(new Vector2(-6.98999977F, -16.7959995F), new Vector2(6.98999977F, -5.25299978F), new Vector2(2.7420001F, 16.7959995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 3 Offset:<95.478, 108.917>
            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-3.94899988F, -16.0809994F));
                    builder.AddLine(new Vector2(3.94899988F, 16.0809994F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 9 Scale:1.17,1.17, Offset:<-1.4189987, -1.0130005>
            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14.6599998F, -16.0769997F));
                    builder.AddCubicBezier(new Vector2(15.71F, -15.9219999F), new Vector2(16.4349995F, -14.9449997F), new Vector2(16.2800007F, -13.8950005F));
                    builder.AddCubicBezier(new Vector2(16.125F, -12.8459997F), new Vector2(15.1479998F, -12.1210003F), new Vector2(14.0979996F, -12.276F));
                    builder.AddCubicBezier(new Vector2(10.8959999F, -12.7489996F), new Vector2(6.59800005F, -8.53299999F), new Vector2(1.66999996F, 0.850000024F));
                    builder.AddCubicBezier(new Vector2(-3.94799995F, 11.5489998F), new Vector2(-9.20800018F, 16.8810005F), new Vector2(-14.5819998F, 16.4850006F));
                    builder.AddCubicBezier(new Vector2(-15.6409998F, 16.4060001F), new Vector2(-16.4349995F, 15.4849997F), new Vector2(-16.3570004F, 14.427F));
                    builder.AddCubicBezier(new Vector2(-16.2779999F, 13.3690004F), new Vector2(-15.3579998F, 12.5740004F), new Vector2(-14.2989998F, 12.6529999F));
                    builder.AddCubicBezier(new Vector2(-11.0279999F, 12.8940001F), new Vector2(-6.67999983F, 8.48600006F), new Vector2(-1.73199999F, -0.93599999F));
                    builder.AddCubicBezier(new Vector2(3.90799999F, -11.6750002F), new Vector2(9.2159996F, -16.8810005F), new Vector2(14.6599998F, -16.0769997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - Transforms: beanie 
            // - - ShapeGroup: Group 9 Scale:1.17,1.17, Offset:<-1.4189987, -1.0130005>
            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-14.0489998F, 17.6340008F));
                    builder.AddCubicBezier(new Vector2(-14.2639999F, 17.6340008F), new Vector2(-14.4779997F, 17.6270008F), new Vector2(-14.6929998F, 17.6100006F));
                    builder.AddCubicBezier(new Vector2(-15.4499998F, 17.5550003F), new Vector2(-16.1399994F, 17.2070007F), new Vector2(-16.6359997F, 16.632F));
                    builder.AddCubicBezier(new Vector2(-17.1310005F, 16.0580006F), new Vector2(-17.3740005F, 15.3249998F), new Vector2(-17.3180008F, 14.5679998F));
                    builder.AddCubicBezier(new Vector2(-17.2619991F, 13.8109999F), new Vector2(-16.9139996F, 13.1210003F), new Vector2(-16.3400002F, 12.6260004F));
                    builder.AddCubicBezier(new Vector2(-15.7650003F, 12.1300001F), new Vector2(-15.0299997F, 11.8850002F), new Vector2(-14.2749996F, 11.9440002F));
                    builder.AddCubicBezier(new Vector2(-11.3299999F, 12.1660004F), new Vector2(-7.07499981F, 7.38600016F), new Vector2(-2.58899999F, -1.15600002F));
                    builder.AddCubicBezier(new Vector2(3.45600009F, -12.6689997F), new Vector2(8.9659996F, -17.6340008F), new Vector2(14.7510004F, -16.7800007F));
                    builder.AddCubicBezier(new Vector2(16.3010006F, -16.5499992F), new Vector2(17.3740005F, -15.1020002F), new Vector2(17.1459999F, -13.5530005F));
                    builder.AddCubicBezier(new Vector2(16.9160004F, -12.0030003F), new Vector2(15.4700003F, -10.9320002F), new Vector2(13.9200001F, -11.158F));
                    builder.AddCubicBezier(new Vector2(12.5699997F, -11.3559999F), new Vector2(8.75F, -10.5249996F), new Vector2(2.44099998F, 1.48599994F));
                    builder.AddCubicBezier(new Vector2(-3.32999992F, 12.4750004F), new Vector2(-8.59000015F, 17.6340008F), new Vector2(-14.0489998F, 17.6340008F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(-14.4849997F, 13.7749996F));
                    builder.AddCubicBezier(new Vector2(-15.0039997F, 13.7749996F), new Vector2(-15.4449997F, 14.177F), new Vector2(-15.4840002F, 14.7019997F));
                    builder.AddCubicBezier(new Vector2(-15.5039997F, 14.9689999F), new Vector2(-15.4180002F, 15.2279997F), new Vector2(-15.243F, 15.4309998F));
                    builder.AddCubicBezier(new Vector2(-15.0690002F, 15.6330004F), new Vector2(-14.8260002F, 15.7539997F), new Vector2(-14.559F, 15.7749996F));
                    builder.AddCubicBezier(new Vector2(-9.74600029F, 16.1240005F), new Vector2(-4.72599983F, 11.1750002F), new Vector2(0.811999977F, 0.629000008F));
                    builder.AddCubicBezier(new Vector2(5.85200024F, -8.9659996F), new Vector2(10.3439999F, -13.5480003F), new Vector2(14.1879997F, -12.9779997F));
                    builder.AddCubicBezier(new Vector2(14.7329998F, -12.8999996F), new Vector2(15.2440004F, -13.276F), new Vector2(15.3260002F, -13.8219995F));
                    builder.AddCubicBezier(new Vector2(15.4060001F, -14.3669996F), new Vector2(15.0270004F, -14.8769999F), new Vector2(14.4809999F, -14.9580002F));
                    builder.AddCubicBezier(new Vector2(9.64299965F, -15.6739998F), new Vector2(4.59299994F, -10.8789997F), new Vector2(-0.962000012F, -0.300999999F));
                    builder.AddCubicBezier(new Vector2(-6.01800013F, 9.32699966F), new Vector2(-10.5480003F, 14.0690002F), new Vector2(-14.4110003F, 13.7770004F));
                    builder.AddCubicBezier(new Vector2(-14.4359999F, 13.776F), new Vector2(-14.46F, 13.7749996F), new Vector2(-14.4849997F, 13.7749996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlack_FF131331()
            {
                return _colorBrush_AlmostBlack_FF131331 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x13, 0x13, 0x31));
            }

            CompositionColorBrush ColorBrush_AlmostDarkOliveGreen_FF4D2E1E()
            {
                return _colorBrush_AlmostDarkOliveGreen_FF4D2E1E = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x4D, 0x2E, 0x1E));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<16.212, 28.668>
            CompositionColorBrush ColorBrush_AlmostGold_FFFFCC33()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xCC, 0x33));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<22.28, 15.333>
            CompositionColorBrush ColorBrush_AlmostGoldenrod_FFEDB31E()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xED, 0xB3, 0x1E));
            }

            CompositionColorBrush ColorBrush_AlmostMediumTurquoise_FF37BEC5()
            {
                return _colorBrush_AlmostMediumTurquoise_FF37BEC5 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x37, 0xBE, 0xC5));
            }

            // - - Layer aggregator
            // Transforms: beak top  Offset:<22.02, 10.6970005>
            CompositionColorBrush ColorBrush_AlmostTomato_FFE35D46()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE3, 0x5D, 0x46));
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(13.4630003F, 38.9179993F);
                result.Scale = new Vector2(9.86999989F, 9.86999989F);
                var shapes = result.Shapes;
                // Transforms: beak top  Offset:<22.02, 10.6970005>
                shapes.Add(SpriteShape_00());
                // ShapeGroup: Group 1 Offset:<16.212, 28.668>
                shapes.Add(SpriteShape_01());
                // Transforms: eye  Offset:<18.241, 13.426>
                shapes.Add(SpriteShape_02());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_0(), RootProgress());
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(29.7810001F, 15.3330002F);
                result.Scale = new Vector2(9.86999989F, 9.86999989F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 1 Offset:<22.28, 15.333>
                shapes.Add(SpriteShape_05());
                // ShapeGroup: Group 3 Scale:0.12,0.12, Offset:<32.354, 10.197>
                shapes.Add(SpriteShape_06());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_1(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_3(), _rootProgress);
                return result;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(13.4630003F, 38.9179993F);
                result.Scale = new Vector2(9.86999989F, 9.86999989F);
                var shapes = result.Shapes;
                // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
                shapes.Add(SpriteShape_07());
                // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
                shapes.Add(SpriteShape_08());
                // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
                shapes.Add(SpriteShape_09());
                // Transforms: beanie
                shapes.Add(ContainerShape_3());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_0_to_0_0, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation_0, _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Transforms for beanie
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(110.032997F, 142.380005F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 8 Offset:<98.067, 113.482>
                shapes.Add(SpriteShape_10());
                // ShapeGroup: Group 7 Offset:<90.666, 58.385>
                shapes.Add(SpriteShape_11());
                // ShapeGroup: Group 6 Offset:<88.697, 70.995>
                shapes.Add(SpriteShape_12());
                // ShapeGroup: Group 5 Offset:<27.717, 119.035>
                shapes.Add(SpriteShape_13());
                // ShapeGroup: Group 4 Offset:<159.212, 93.184>
                shapes.Add(SpriteShape_14());
                // ShapeGroup: Group 3 Offset:<95.478, 108.917>
                shapes.Add(SpriteShape_15());
                // ShapeGroup: Group 9 Scale:1.17,1.17, Offset:<-1.4189987, -1.0130005>
                shapes.Add(SpriteShape_16());
                // ShapeGroup: Group 9 Scale:1.17,1.17, Offset:<-1.4189987, -1.0130005>
                shapes.Add(SpriteShape_17());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0p083_to_0p083(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_4(), _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // Transforms: beak top  Offset:<22.02, 10.6970005>
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<16.212, 28.668>
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - Layer aggregator
            // Transforms: eye  Offset:<18.241, 13.426>
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
            }

            // - Layer aggregator
            // Scale:9.87,9.87, Offset:<496.32498, 754.14>
            CompositionPathGeometry PathGeometry_03()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
            }

            // - Layer aggregator
            // Scale:9.87,9.87, Offset:<496.32498, 754.14>
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<22.28, 15.333>
            CompositionPathGeometry PathGeometry_05()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_05()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 3 Scale:0.12,0.12, Offset:<32.354, 10.197>
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_06()));
            }

            // - - Layer aggregator
            // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - - Layer aggregator
            // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_08()));
            }

            // - - Layer aggregator
            // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 8 Offset:<98.067, 113.482>
            CompositionPathGeometry PathGeometry_10()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 7 Offset:<90.666, 58.385>
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_11()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 6 Offset:<88.697, 70.995>
            CompositionPathGeometry PathGeometry_12()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_12()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 5 Offset:<27.717, 119.035>
            CompositionPathGeometry PathGeometry_13()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 4 Offset:<159.212, 93.184>
            CompositionPathGeometry PathGeometry_14()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_14()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 3 Offset:<95.478, 108.917>
            CompositionPathGeometry PathGeometry_15()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_15()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 9 Scale:1.17,1.17, Offset:<-1.4189987, -1.0130005>
            CompositionPathGeometry PathGeometry_16()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_16()));
            }

            // - - - Layer aggregator
            // - Transforms: beanie 
            // ShapeGroup: Group 9 Scale:1.17,1.17, Offset:<-1.4189987, -1.0130005>
            CompositionPathGeometry PathGeometry_17()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_17()));
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<29.739, 18.103>
                var geometry = PathGeometry_00();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 29.7390003F, 18.1030006F), ColorBrush_AlmostTomato_FFE35D46());;
                result.StrokeBrush = ColorBrush_AlmostDarkOliveGreen_FF4D2E1E();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 0.5F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<16.212, 28.668>
                var geometry = PathGeometry_01();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 16.2119999F, 28.6679993F), ColorBrush_AlmostGold_FFFFCC33());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<19.557, 14.742>
                var geometry = PathGeometry_02();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 19.5569992F, 14.7419996F), _colorBrush_AlmostDarkOliveGreen_FF4D2E1E);;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<375.84378, 682.47925>, Rotation:-0.009875109881618717 degrees,
                // Scale:<9.87, 9.87>
                var result = CreateSpriteShape(PathGeometry_03(), new Matrix3x2(9.86999989F, 0F, 0F, 9.86999989F, 375.843781F, 682.479248F));;
                result.StrokeBrush = _colorBrush_AlmostDarkOliveGreen_FF4D2E1E;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 0.5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_1(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<375.84378, 682.47925>, Rotation:-0.009875109881618717 degrees,
                // Scale:<9.87, 9.87>
                var result = CreateSpriteShape(PathGeometry_04(), new Matrix3x2(9.86999989F, 0F, 0F, 9.86999989F, 375.843781F, 682.479248F));;
                result.StrokeBrush = _colorBrush_AlmostDarkOliveGreen_FF4D2E1E;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 0.5F;
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation_2(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<22.28, 15.333>
                var geometry = PathGeometry_05();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 22.2800007F, 15.3330002F), ColorBrush_AlmostGoldenrod_FFEDB31E());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<32.354, 10.197>, Rotation:-0.009505878559246858 degrees, Scale:<0.12, 0.12>
                var result = CreateSpriteShape(PathGeometry_06(), new Matrix3x2(0.119999997F, 0F, 0F, 0.119999997F, 32.3540001F, 10.1969995F));;
                result.StrokeBrush = ColorBrush_AlmostBlack_FF131331();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<-2.0904846, 2.1825676>, Rotation:-0.0073770329123677165 degrees,
                // Scale:<0.12172, 0.12172>
                var result = CreateSpriteShape(PathGeometry_07(), new Matrix3x2(0.121720001F, 0F, 0F, 0.121720001F, -2.09048462F, 2.1825676F));;
                result.CenterPoint = new Vector2(60.5460014F, -24.1380005F);
                result.Offset = new Vector2(80.4509888F, 67.0709991F);
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_2(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<-2.0904846, 2.1825676>, Rotation:-0.0073770329123677165 degrees,
                // Scale:<0.12172, 0.12172>
                var result = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(0.121720001F, 0F, 0F, 0.121720001F, -2.09048462F, 2.1825676F));;
                result.CenterPoint = new Vector2(59.5550003F, -32.3699989F);
                result.Offset = new Vector2(71.7340012F, 81.4449997F);
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_3(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<-2.0904846, 2.1825676>, Rotation:-0.0073770329123677165 degrees,
                // Scale:<0.12172, 0.12172>
                var result = CreateSpriteShape(PathGeometry_09(), new Matrix3x2(0.121720001F, 0F, 0F, 0.121720001F, -2.09048462F, 2.1825676F));;
                result.CenterPoint = new Vector2(-31.1100006F, 20.448F);
                result.Offset = new Vector2(221.160995F, 31.9899998F);
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0_4(), _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<98.067, 113.482>
                var geometry = PathGeometry_10();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 98.0670013F, 113.482002F), ColorBrush_AlmostMediumTurquoise_FF37BEC5());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<90.666, 58.385>
                var geometry = PathGeometry_11();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 90.6660004F, 58.3849983F), _colorBrush_AlmostMediumTurquoise_FF37BEC5);;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<88.697, 70.995>
                var result = CreateSpriteShape(PathGeometry_12(), new Matrix3x2(1F, 0F, 0F, 1F, 88.6969986F, 70.9950027F));;
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<27.717, 119.035>
                var result = CreateSpriteShape(PathGeometry_13(), new Matrix3x2(1F, 0F, 0F, 1F, 27.7169991F, 119.035004F));;
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<159.212, 93.184>
                var result = CreateSpriteShape(PathGeometry_14(), new Matrix3x2(1F, 0F, 0F, 1F, 159.212006F, 93.1839981F));;
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<95.478, 108.917>
                var result = CreateSpriteShape(PathGeometry_15(), new Matrix3x2(1F, 0F, 0F, 1F, 95.4779968F, 108.917F));;
                result.StrokeBrush = _colorBrush_AlmostBlack_FF131331;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 4.35099983F;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<76.84311, 39.92476>, Rotation:-0.01002003123834579 degrees,
                // Scale:<1.17, 1.17>
                var geometry = PathGeometry_16();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1.16999996F, 0F, 0F, 1.16999996F, 76.8431091F, 39.9247589F), ColorBrush_White());;
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // ShapeGroup: Group 1 Offset:<78.301, 40.759>
            CompositionSpriteShape SpriteShape_17()
            {
                // Offset:<76.894585, 39.681396>, Rotation:-0.01002003123834579 degrees,
                // Scale:<1.17, 1.17>
                var geometry = PathGeometry_17();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1.16999996F, 0F, 0F, 1.16999996F, 76.8945847F, 39.6813965F), _colorBrush_White);;
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_0());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.833000004F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.261000007F, 0F), new Vector2(0.601000011F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.238999993F, 0F), new Vector2(0.833000004F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_6()
            {
                return _cubicBezierEasingFunction_6 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.666999996F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_0()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_0_to_0_0 = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 63.
                result.InsertKeyFrame(0.524999976F, 0F, HoldThenStepEasingFunction());
                // Frame 74.
                result.InsertKeyFrame(0.616666675F, -3F, CubicBezierEasingFunction_0());
                // Frame 92.
                result.InsertKeyFrame(0.766666651F, 90F, _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.368000001F, 1F)));
                // Frame 109.
                result.InsertKeyFrame(0.908333361F, -1.66999996F, _c.CreateCubicBezierEasingFunction(new Vector2(0.769999981F, 0F), new Vector2(0.833000004F, 1F)));
                // Frame 114.
                result.InsertKeyFrame(0.949999988F, 2F, _cubicBezierEasingFunction_0);
                // Frame 119.
                result.InsertKeyFrame(0.991666675F, 0F, _cubicBezierEasingFunction_0);
                return result;
            }

            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 1.
                result.InsertKeyFrame(0.00833333377F, 0F, _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.0666666701F, 2.4519999F, CubicBezierEasingFunction_4());
                // Frame 15.
                result.InsertKeyFrame(0.125F, 0F, CubicBezierEasingFunction_5());
                // Frame 22.
                result.InsertKeyFrame(0.183333337F, 2.4519999F, _cubicBezierEasingFunction_4);
                // Frame 29.
                result.InsertKeyFrame(0.24166666F, 0F, _cubicBezierEasingFunction_5);
                // Frame 36.
                result.InsertKeyFrame(0.300000012F, 2.4519999F, _cubicBezierEasingFunction_4);
                // Frame 43.
                result.InsertKeyFrame(0.358333319F, 0F, _cubicBezierEasingFunction_5);
                // Frame 50.
                result.InsertKeyFrame(0.416666657F, 2.4519999F, _cubicBezierEasingFunction_4);
                // Frame 57.
                result.InsertKeyFrame(0.474999994F, 0F, _cubicBezierEasingFunction_5);
                // Frame 64.
                result.InsertKeyFrame(0.533333361F, 2.4519999F, _cubicBezierEasingFunction_4);
                // Frame 71.
                result.InsertKeyFrame(0.591666639F, 0F, _cubicBezierEasingFunction_5);
                // Frame 74.
                result.InsertKeyFrame(0.616666675F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.261000007F, 0F), new Vector2(0.68599999F, 1F)));
                // Frame 92.
                result.InsertKeyFrame(0.766666651F, 26.6019993F, _cubicBezierEasingFunction_1);
                // Frame 109.
                result.InsertKeyFrame(0.908333361F, 0F, _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_2()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 2.
                result.InsertKeyFrame(0.0166666675F, 0F, _holdThenStepEasingFunction);
                // Frame 9.
                result.InsertKeyFrame(0.075000003F, 3F, _cubicBezierEasingFunction_1);
                // Frame 16.
                result.InsertKeyFrame(0.13333334F, 0F, _cubicBezierEasingFunction_1);
                // Frame 23.
                result.InsertKeyFrame(0.191666663F, 3F, _cubicBezierEasingFunction_1);
                // Frame 30.
                result.InsertKeyFrame(0.25F, 0F, _cubicBezierEasingFunction_1);
                // Frame 37.
                result.InsertKeyFrame(0.308333337F, 3F, _cubicBezierEasingFunction_1);
                // Frame 44.
                result.InsertKeyFrame(0.366666675F, 0F, _cubicBezierEasingFunction_1);
                // Frame 51.
                result.InsertKeyFrame(0.425000012F, 3F, _cubicBezierEasingFunction_1);
                // Frame 58.
                result.InsertKeyFrame(0.483333319F, 0F, _cubicBezierEasingFunction_1);
                // Frame 65.
                result.InsertKeyFrame(0.541666687F, 3F, _cubicBezierEasingFunction_1);
                // Frame 72.
                result.InsertKeyFrame(0.600000024F, 0F, _cubicBezierEasingFunction_1);
                // Frame 95.
                result.InsertKeyFrame(0.791666687F, 22F, _cubicBezierEasingFunction_0);
                // Frame 112.
                result.InsertKeyFrame(0.933333337F, -8F, CubicBezierEasingFunction_6());
                // Frame 116.
                result.InsertKeyFrame(0.966666639F, 2F, _cubicBezierEasingFunction_6);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_6);
                return result;
            }

            // - - Layer aggregator
            // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_3()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 2.
                result.InsertKeyFrame(0.0166666675F, 0F, _holdThenStepEasingFunction);
                // Frame 9.
                result.InsertKeyFrame(0.075000003F, 3F, _cubicBezierEasingFunction_1);
                // Frame 16.
                result.InsertKeyFrame(0.13333334F, 0F, _cubicBezierEasingFunction_1);
                // Frame 23.
                result.InsertKeyFrame(0.191666663F, 3F, _cubicBezierEasingFunction_1);
                // Frame 30.
                result.InsertKeyFrame(0.25F, 0F, _cubicBezierEasingFunction_1);
                // Frame 37.
                result.InsertKeyFrame(0.308333337F, 3F, _cubicBezierEasingFunction_1);
                // Frame 44.
                result.InsertKeyFrame(0.366666675F, 0F, _cubicBezierEasingFunction_1);
                // Frame 51.
                result.InsertKeyFrame(0.425000012F, 3F, _cubicBezierEasingFunction_1);
                // Frame 58.
                result.InsertKeyFrame(0.483333319F, 0F, _cubicBezierEasingFunction_1);
                // Frame 65.
                result.InsertKeyFrame(0.541666687F, 3F, _cubicBezierEasingFunction_1);
                // Frame 72.
                result.InsertKeyFrame(0.600000024F, 0F, _cubicBezierEasingFunction_1);
                // Frame 95.
                result.InsertKeyFrame(0.791666687F, 22F, _cubicBezierEasingFunction_0);
                // Frame 112.
                result.InsertKeyFrame(0.933333337F, -7F, _cubicBezierEasingFunction_6);
                // Frame 116.
                result.InsertKeyFrame(0.966666639F, 2F, _cubicBezierEasingFunction_6);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_6);
                return result;
            }

            // - - Layer aggregator
            // Transforms: hair  Scale:0.12172,0.12172, Offset:<-118.37299, -52.961998>
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0_4()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 2.
                result.InsertKeyFrame(0.0166666675F, 0F, _holdThenStepEasingFunction);
                // Frame 9.
                result.InsertKeyFrame(0.075000003F, -3F, _cubicBezierEasingFunction_1);
                // Frame 16.
                result.InsertKeyFrame(0.13333334F, 0F, _cubicBezierEasingFunction_1);
                // Frame 23.
                result.InsertKeyFrame(0.191666663F, -3F, _cubicBezierEasingFunction_1);
                // Frame 30.
                result.InsertKeyFrame(0.25F, 0F, _cubicBezierEasingFunction_1);
                // Frame 37.
                result.InsertKeyFrame(0.308333337F, -3F, _cubicBezierEasingFunction_1);
                // Frame 44.
                result.InsertKeyFrame(0.366666675F, 0F, _cubicBezierEasingFunction_1);
                // Frame 51.
                result.InsertKeyFrame(0.425000012F, -3F, _cubicBezierEasingFunction_1);
                // Frame 58.
                result.InsertKeyFrame(0.483333319F, 0F, _cubicBezierEasingFunction_1);
                // Frame 65.
                result.InsertKeyFrame(0.541666687F, -3F, _cubicBezierEasingFunction_1);
                // Frame 72.
                result.InsertKeyFrame(0.600000024F, 0F, _cubicBezierEasingFunction_1);
                // Frame 95.
                result.InsertKeyFrame(0.791666687F, 42F, _cubicBezierEasingFunction_0);
                // Frame 112.
                result.InsertKeyFrame(0.933333337F, -15F, _cubicBezierEasingFunction_6);
                // Frame 116.
                result.InsertKeyFrame(0.966666639F, 2F, _cubicBezierEasingFunction_6);
                // Frame 120.
                result.InsertKeyFrame(1F, 0F, _cubicBezierEasingFunction_6);
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0p083_to_0p083()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0.0829999968F, _stepThenHoldEasingFunction);
                // Frame 75.
                result.InsertKeyFrame(0.625F, 0.0829999968F, _holdThenStepEasingFunction);
                // Frame 93.
                result.InsertKeyFrame(0.774999976F, 17.3139992F, _cubicBezierEasingFunction_1);
                // Frame 110.
                result.InsertKeyFrame(0.916666687F, -1.93099999F, _cubicBezierEasingFunction_1);
                // Frame 115.
                result.InsertKeyFrame(0.958333313F, 1.95000005F, _cubicBezierEasingFunction_1);
                // Frame 120.
                result.InsertKeyFrame(1F, 0.0829999968F, _cubicBezierEasingFunction_1);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1024F, 1024F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_0());
                // Scale:9.87,9.87, Offset:<496.32498, 754.14>
                shapes.Add(SpriteShape_03());
                // Scale:9.87,9.87, Offset:<496.32498, 754.14>
                shapes.Add(SpriteShape_04());
                shapes.Add(ContainerShape_1());
                shapes.Add(ContainerShape_2());
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = _offsetVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(543.669006F, 564.263977F), _holdThenStepEasingFunction);
                // Frame 7.
                result.InsertKeyFrame(0.0583333336F, new Vector2(543.669006F, 568.263977F), CubicBezierEasingFunction_1());
                // Frame 14.
                result.InsertKeyFrame(0.116666667F, new Vector2(543.669006F, 564.263977F), _cubicBezierEasingFunction_1);
                // Frame 21.
                result.InsertKeyFrame(0.174999997F, new Vector2(543.669006F, 568.263977F), _cubicBezierEasingFunction_1);
                // Frame 28.
                result.InsertKeyFrame(0.233333334F, new Vector2(543.669006F, 564.263977F), _cubicBezierEasingFunction_1);
                // Frame 35.
                result.InsertKeyFrame(0.291666657F, new Vector2(543.669006F, 568.263977F), _cubicBezierEasingFunction_1);
                // Frame 42.
                result.InsertKeyFrame(0.349999994F, new Vector2(543.669006F, 564.263977F), _cubicBezierEasingFunction_1);
                // Frame 49.
                result.InsertKeyFrame(0.408333331F, new Vector2(543.669006F, 568.263977F), _cubicBezierEasingFunction_1);
                // Frame 56.
                result.InsertKeyFrame(0.466666669F, new Vector2(543.669006F, 564.263977F), _cubicBezierEasingFunction_1);
                // Frame 63.
                result.InsertKeyFrame(0.524999976F, new Vector2(543.669006F, 568.263977F), _cubicBezierEasingFunction_1);
                // Frame 70.
                result.InsertKeyFrame(0.583333313F, new Vector2(543.669006F, 564.263977F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - Layer aggregator
            // Scale:9.87,9.87, Offset:<496.32498, 754.14>
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(7.46500015F, 8.07900047F), _stepThenHoldEasingFunction);
                // Frame 14.
                result.InsertKeyFrame(0.116666667F, new Vector2(7.46500015F, 8.07900047F), _holdThenStepEasingFunction);
                // Frame 21.
                result.InsertKeyFrame(0.174999997F, new Vector2(7.46500015F, 5.579F), _cubicBezierEasingFunction_1);
                // Frame 28.
                result.InsertKeyFrame(0.233333334F, new Vector2(7.46500015F, 8.07900047F), CubicBezierEasingFunction_2());
                // Frame 42.
                result.InsertKeyFrame(0.349999994F, new Vector2(7.46500015F, 8.07900047F), CubicBezierEasingFunction_3());
                // Frame 49.
                result.InsertKeyFrame(0.408333331F, new Vector2(7.46500015F, 5.579F), _cubicBezierEasingFunction_1);
                // Frame 56.
                result.InsertKeyFrame(0.466666669F, new Vector2(7.46500015F, 8.07900047F), _cubicBezierEasingFunction_2);
                return result;
            }

            // - Layer aggregator
            // Scale:9.87,9.87, Offset:<496.32498, 754.14>
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(19.7010002F, 8.07900047F), _holdThenStepEasingFunction);
                // Frame 7.
                result.InsertKeyFrame(0.0583333336F, new Vector2(19.7010002F, 5.579F), _cubicBezierEasingFunction_1);
                // Frame 14.
                result.InsertKeyFrame(0.116666667F, new Vector2(19.7010002F, 8.07900047F), _cubicBezierEasingFunction_2);
                // Frame 28.
                result.InsertKeyFrame(0.233333334F, new Vector2(19.7010002F, 8.07900047F), _cubicBezierEasingFunction_3);
                // Frame 35.
                result.InsertKeyFrame(0.291666657F, new Vector2(19.7010002F, 5.579F), _cubicBezierEasingFunction_1);
                // Frame 42.
                result.InsertKeyFrame(0.349999994F, new Vector2(19.7010002F, 8.07900047F), _cubicBezierEasingFunction_2);
                // Frame 56.
                result.InsertKeyFrame(0.466666669F, new Vector2(19.7010002F, 8.07900047F), _cubicBezierEasingFunction_3);
                // Frame 63.
                result.InsertKeyFrame(0.524999976F, new Vector2(19.7010002F, 5.579F), _cubicBezierEasingFunction_1);
                // Frame 70.
                result.InsertKeyFrame(0.583333313F, new Vector2(19.7010002F, 8.07900047F), _cubicBezierEasingFunction_2);
                return result;
            }

            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(490.968994F, 618.296997F), _stepThenHoldEasingFunction);
                // Frame 1.
                result.InsertKeyFrame(0.00833333377F, new Vector2(490.968994F, 618.296997F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.0666666701F, new Vector2(490.968994F, 620.296997F), _cubicBezierEasingFunction_1);
                // Frame 15.
                result.InsertKeyFrame(0.125F, new Vector2(490.968994F, 618.296997F), _cubicBezierEasingFunction_1);
                // Frame 22.
                result.InsertKeyFrame(0.183333337F, new Vector2(490.968994F, 620.296997F), _cubicBezierEasingFunction_1);
                // Frame 29.
                result.InsertKeyFrame(0.24166666F, new Vector2(490.968994F, 618.296997F), _cubicBezierEasingFunction_1);
                // Frame 36.
                result.InsertKeyFrame(0.300000012F, new Vector2(490.968994F, 620.296997F), _cubicBezierEasingFunction_1);
                // Frame 43.
                result.InsertKeyFrame(0.358333319F, new Vector2(490.968994F, 618.296997F), _cubicBezierEasingFunction_1);
                // Frame 50.
                result.InsertKeyFrame(0.416666657F, new Vector2(490.968994F, 620.296997F), _cubicBezierEasingFunction_1);
                // Frame 57.
                result.InsertKeyFrame(0.474999994F, new Vector2(490.968994F, 618.296997F), _cubicBezierEasingFunction_1);
                // Frame 64.
                result.InsertKeyFrame(0.533333361F, new Vector2(490.968994F, 620.296997F), _cubicBezierEasingFunction_1);
                // Frame 71.
                result.InsertKeyFrame(0.591666639F, new Vector2(490.968994F, 618.296997F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_4()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(-94.5839996F, -132.598007F), _stepThenHoldEasingFunction);
                // Frame 75.
                result.InsertKeyFrame(0.625F, new Vector2(-94.5839996F, -132.598007F), _holdThenStepEasingFunction);
                // Frame 93.
                result.InsertKeyFrame(0.774999976F, new Vector2(-92.4570007F, -131.684006F), _cubicBezierEasingFunction_1);
                // Frame 110.
                result.InsertKeyFrame(0.916666687F, new Vector2(-95.5009995F, -132.365005F), _cubicBezierEasingFunction_1);
                // Frame 115.
                result.InsertKeyFrame(0.958333313F, new Vector2(-94.3830032F, -132.656006F), _cubicBezierEasingFunction_1);
                // Frame 120.
                result.InsertKeyFrame(1F, new Vector2(-94.5839996F, -132.598007F), _cubicBezierEasingFunction_1);
                return result;
            }

            // - - Layer aggregator
            // Transforms: beanie 
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0.118539996F, 0.118539996F), _stepThenHoldEasingFunction);
                // Frame 1.
                result.InsertKeyFrame(0.00833333377F, new Vector2(0.118539996F, 0.118539996F), _holdThenStepEasingFunction);
                // Frame 8.
                result.InsertKeyFrame(0.0666666701F, new Vector2(0.120999999F, 0.116999999F), _cubicBezierEasingFunction_2);
                // Frame 15.
                result.InsertKeyFrame(0.125F, new Vector2(0.118539996F, 0.118539996F), _cubicBezierEasingFunction_1);
                // Frame 22.
                result.InsertKeyFrame(0.183333337F, new Vector2(0.120999999F, 0.116999999F), _cubicBezierEasingFunction_2);
                // Frame 29.
                result.InsertKeyFrame(0.24166666F, new Vector2(0.118539996F, 0.118539996F), _cubicBezierEasingFunction_1);
                // Frame 36.
                result.InsertKeyFrame(0.300000012F, new Vector2(0.120999999F, 0.116999999F), _cubicBezierEasingFunction_2);
                // Frame 43.
                result.InsertKeyFrame(0.358333319F, new Vector2(0.118539996F, 0.118539996F), _cubicBezierEasingFunction_1);
                // Frame 50.
                result.InsertKeyFrame(0.416666657F, new Vector2(0.120999999F, 0.116999999F), _cubicBezierEasingFunction_2);
                // Frame 57.
                result.InsertKeyFrame(0.474999994F, new Vector2(0.118539996F, 0.118539996F), _cubicBezierEasingFunction_1);
                // Frame 64.
                result.InsertKeyFrame(0.533333361F, new Vector2(0.120999999F, 0.116999999F), _cubicBezierEasingFunction_2);
                // Frame 71.
                result.InsertKeyFrame(0.591666639F, new Vector2(0.118539996F, 0.118539996F), _cubicBezierEasingFunction_1);
                return result;
            }

            internal Polite_Chicky_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1024F, 1024F);
            void IDisposable.Dispose() => _root?.Dispose();

            internal static bool IsRuntimeCompatible()
            {
                return Windows.Foundation.Metadata.ApiInformation.IsApiContractPresent("Windows.Foundation.UniversalApiContract", 7);
            }
        }
    }
}
